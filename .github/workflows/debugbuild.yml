name: Debug Build - Floaty

on:
  push:
    branches:
      - "**"

jobs:
  build:
    name: Debug Build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.1"
          cache: true

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Analyze code
        run: flutter analyze || true

      - name: Run tests
        run: flutter test || true

      # Android Debug Build
      - name: Build Android Debug APK (Split by ABI)
        if: matrix.os == 'windows-latest'
        run: flutter build apk --debug --split-per-abi

      # Windows Debug Build
      - name: Build Windows (Debug)
        if: matrix.os == 'windows-latest'
        run: flutter build windows --debug

      # macOS Debug Build
      - name: Build macOS (Debug)
        if: matrix.os == 'macos-latest'
        run: flutter build macos --debug

      # Linux Debug Build
      - name: Build Linux (Debug)
        if: matrix.os == 'ubuntu-latest'
        run: flutter build linux --debug

      # iOS Debug Build (Only on macOS)
      - name: Generate iOS plugins
        if: matrix.os == 'macos-latest'
        run: flutter pub run build_runner build --delete-conflicting-outputs || true
        
      - name: Install CocoaPods dependencies (iOS)
        if: matrix.os == 'macos-latest'
        working-directory: ios
        run: pod install

      - name: Echo Podfile after installing pods (iOS)
        if: matrix.os == 'macos-latest' && always()
        run: |
          echo "Echoing Podfile contents:"
          cat ios/Podfile || true  # Adjust the path if needed

      - name: Build iOS (Debug - No Codesign)
        if: matrix.os == 'macos-latest'
        run: flutter build ios --debug --no-codesign
